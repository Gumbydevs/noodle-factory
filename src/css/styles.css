/* This chungus of a java css file contains the styles for the game, including layout, card designs, animtions, and overall aesthetics */

@keyframes wiggle {
    0% { transform: rotate(-15deg); }
    100% { transform: rotate(15deg); }
}

@keyframes slideIn {
    from { transform: translateX(100%); }
    to { transform: translateX(0); }
}

@keyframes pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.05); }
    100% { transform: scale(1); }
}

/* Add new keyframes for chaos effects */
@keyframes melt {
    0% { transform: perspective(500px) rotateX(0deg); }
    50% { transform: perspective(500px) rotateX(30deg) scaleY(1.5); }
    100% { transform: perspective(500px) rotateX(0deg); }
}

@keyframes distort {
    0% { transform: skew(0deg); }
    25% { transform: skew(5deg, 5deg); }
    75% { transform: skew(-5deg, -5deg); }
    100% { transform: skew(0deg); }
}

/* Replace the glitch keyframes with heatwave distortion */
@keyframes heatwave {
    0% { transform: translate3d(0, 0, 0) rotate(0deg); }
    25% { transform: translate3d(2px, -1px, 0) rotate(0.5deg); }
    50% { transform: translate3d(-1px, 2px, 0) rotate(-0.5deg); }
    75% { transform: translate3d(1px, -2px, 0) rotate(0.25deg); }
    100% { transform: translate3d(0, 0, 0) rotate(0deg); }
}

@keyframes noise {
    0%, 100% { transform: translate(0, 0); }
    10% { transform: translate(-5%, -5%); }
    20% { transform: translate(10%, 5%); }
    30% { transform: translate(-5%, 10%); }
    40% { transform: translate(15%, -5%); }
    50% { transform: translate(-15%, 15%); }
    60% { transform: translate(5%, 5%); }
    70% { transform: translate(-10%, -10%); }
    80% { transform: translate(5%, -15%); }
    90% { transform: translate(-5%, 10%); }
}

/* Subtle animations for lower chaos levels */
@keyframes subtleWiggle {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(0.3deg); }
    75% { transform: rotate(-0.3deg); }
    100% { transform: rotate(0deg); }
}

@keyframes subtleDistort {
    0% { transform: skew(0deg); }
    25% { transform: skew(0.5deg, 0.5deg); }
    75% { transform: skew(-0.5deg, -0.5deg); }
    100% { transform: skew(0deg); }
}

@keyframes crtWave {
    0%, 100% { transform: translate3d(0, 0, 0); }
    50% { transform: translate3d(0, 1px, 0); }
}

@keyframes crtDistort {
    0% { transform: skew(0.15deg, 0deg); }
    25% { transform: skew(-0.15deg, 0deg); }
    50% { transform: skew(0.15deg, 0deg); }
    75% { transform: skew(-0.15deg, 0deg); }
    100% { transform: skew(0.15deg, 0deg); }
}

@keyframes crtFlicker {
    0% { opacity: 0.98; }
    50% { opacity: 1; }
    100% { opacity: 0.98; }
}

@keyframes scanline {
    0% { transform: translateY(0); }
    100% { transform: translateY(100vh); }
}

@keyframes removeWarning {
    0%, 90% {
        color: #ff4444;
        background: linear-gradient(to right, #2c3e50, #c0392b);
        transform: scale(1.05);
    }
    100% {
        color: #3498db;
        background: linear-gradient(to right, #2c3e50, #3a506b);
        transform: scale(1);
        animation: none;
    }
}

@keyframes jiggle {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(2deg); }
    75% { transform: rotate(-2deg); }
    100% { transform: rotate(0deg); }
}

@keyframes noodleWiggle {
    0% { transform: rotate(0deg) scaleX(1); }
    25% { transform: rotate(3deg) scaleX(1.1); }
    50% { transform: rotate(-2deg) scaleX(0.95); }
    75% { transform: rotate(2deg) scaleX(1.05); }
    100% { transform: rotate(0deg) scaleX(1); }
}

/* Add intermittent animation trigger */
@keyframes randomTrigger {
    0%, 85% { animation: none; }
    85.0001%, 100% { animation: jiggle 1.5s ease-in-out; }
}

/* Update the hoverExcited animation */
@keyframes hoverExcited {
    0% { transform: scale(1.05) rotate(0deg); }
    10% { transform: scale(1.05) rotate(-3deg); }
    20% { transform: scale(1.05) rotate(3deg); }
    30% { transform: scale(1.05) rotate(-2deg); }
    40% { transform: scale(1.05) rotate(2deg); }
    50% { transform: scale(1.05) rotate(-1deg); }
    60% { transform: scale(1.05) rotate(1deg); }
    70% { transform: scale(1.05) rotate(-0.5deg); }
    80% { transform: scale(1.05) rotate(0.5deg); }
    90% { transform: scale(1.05) rotate(-0.2deg); }
    100% { transform: scale(1.05) rotate(0deg); }
}

@keyframes squiggle {
    0% { transform: skew(0deg, 0deg); }
    25% { transform: skew(5deg, 2deg); }
    50% { transform: skew(0deg, 0deg); }
    75% { transform: skew(-5deg, -2deg); }
    100% { transform: skew(0deg, 0deg); }
}

/* Add these new keyframes near the other animations */
@keyframes statsFloat {
    0%, 100% {
        transform: translateY(0) rotate(-0.1deg);
    }
    50% {
        transform: translateY(-2px) rotate(0.1deg);
    }
}

@keyframes statsJitter {
    0% { transform: rotate(0deg); }
    25% { transform: rotate(0.2deg); }
    75% { transform: rotate(-0.2deg); }
    100% { transform: rotate(0deg); }
}

/* Add these new keyframes near the other card animations */
@keyframes randomJitter {
    0%, 100% { transform: rotate(0deg); }
    50% { transform: rotate(1deg); }
}

/* Add these new animations without modifying existing styles */
@keyframes chaosShake {
    0%, 100% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    75% { transform: translateX(5px); }
}

@keyframes chaosPulse {
    0%, 100% { color: inherit; }
    50% { color: #ff0000; }
}

/* Enhance existing chaos effects and add new ones */
@keyframes chaosWarp {
    0% { background: linear-gradient(45deg, #1a1a1a, #1a1818); }
    33% { background: linear-gradient(45deg, #1a1818, #181a1a); }
    66% { background: linear-gradient(45deg, #181a1a, #1a1818); }
    100% { background: linear-gradient(45deg, #1a1a1a, #1a1818); }
}

/* Enhance screen shake */
@keyframes chaosNoise {
    0%, 40%, 100% { transform: translate3d(0, 0, 0); }
    42% { transform: translate3d(1.15px, -1.15px, 0); }
    44% { transform: translate3d(-1.15px, 1.15px, 0); }
    46% { transform: translate3d(1.15px, 1.15px, 0); }
    48% { transform: translate3d(0, 0, 0); }
}

/* Add new noodle rain animations */
@keyframes noodleFall {
    0% {
        transform: translateY(-20px) rotate(0deg);
        opacity: 0.8;
    }
    90% {
        opacity: 0.8;
    }
    100% {
        transform: translateY(100vh) rotate(720deg);
        opacity: 0;
    }
}

/* Add a new function to assign random animations to each noodle */
@keyframes noodleFallRandom {
    0% {
        transform: translateY(-20px) rotate(0deg);
        opacity: 0.8;
    }
    90% {
        opacity: 0.8;
    }
    100% {
        transform: translateY(100vh) rotate(var(--spin-amount));
        opacity: 0;
    }
}

/* First, add these new keyframes if not already present */
@keyframes chaosBackgroundPulse {
    0% { background-color: rgba(26, 26, 26, 1); }
    50% { background-color: rgba(24, 22, 22, 1); }  /* Slightly warmer dark */
    75% { background-color: rgba(22, 24, 24, 1); }  /* Slightly cooler dark */
    100% { background-color: rgba(26, 26, 26, 1); }
}

@keyframes chaosColorShift {
    0% { filter: hue-rotate(0deg); }
    50% { filter: hue-rotate(15deg); }
    100% { filter: hue-rotate(0deg); }
}

/* Add these new keyframes near the other animations */
@keyframes gameOverFlash {
    0% { background: rgba(0, 0, 0, 0.95); }
    50% { background: rgba(50, 0, 0, 0.95); }
    100% { background: rgba(0, 0, 0, 0.95); }
}

@keyframes touchExcited {
    0% { transform: scale(1.02) rotate(0deg); }
    25% { transform: scale(1.02) rotate(-2deg); }
    50% { transform: scale(1.02) rotate(2deg); }
    75% { transform: scale(1.02) rotate(-1deg); }
    100% { transform: scale(1.02) rotate(0deg); }
}

/* noodle animations */
@keyframes noodleFlyAcross {
    0% {
        transform: translateX(-120vw) scaleX(0.8);
        opacity: 0;
    }
    10% {
        transform: translateX(-80vw) scaleX(1.2);
        opacity: 1;
    }
    45% {
        transform: translateX(0) scaleX(0.9);
        opacity: 1;
    }
    85% {
        transform: translateX(80vw) scaleX(1.1);
        opacity: 1;
    }
    100% {
        transform: translateX(120vw) scaleX(1.5);
        opacity: 0;
    }
}

/* Add new intense animations for max chaos */
@keyframes chaoticSpin {
    0% { transform: rotate(0deg) scale(1); }
    25% { transform: rotate(2deg) scale(1.02); }
    75% { transform: rotate(-2deg) scale(0.98); }
    100% { transform: rotate(0deg) scale(1); }
}

/* Update this color cycle animation for better compatibility */
@keyframes colorCycle {
    33% { background-color: #151a1a; }
    66% { background-color: #1a151a; }
    100% { background-color: #1a1515; }
}

/* Add new keyframes for stat value changes */
@keyframes statChange {
    0% { transform: scale(1); }
    50% { transform: scale(1.3); filter: brightness(1.5); }
    100% { transform: scale(1); }
}

@keyframes statGlow {
    0% { text-shadow: 0 0 5px currentColor; }
    50% { text-shadow: 0 0 15px currentColor, 0 0 25px currentColor; }
    100% { text-shadow: 0 0 5px currentColor; }
}

@keyframes statIncrease {
    0% { transform: scale(1); }
    50% { transform: scale(1.3); filter: brightness(1.5); }
    100% { transform: scale(1); }
}

@keyframes statDecrease {
    0% { transform: scale(1); }
    50% { transform: scale(1.3); }
    100% { transform: scale(1); }
}

@keyframes wiggle-selected {
    0% { transform: rotate(0deg) scale(1); }
    20% { transform: rotate(-8deg) scale(1.12); }
    40% { transform: rotate(6deg) scale(1.15); }
    60% { transform: rotate(-4deg) scale(1.12); }
    80% { transform: rotate(2deg) scale(1.08); }
    100% { transform: rotate(0deg) scale(1.05); }
}

/* Update selectedCardVanish animation to be more reliable */
@keyframes selectedCardVanish {
    0% { 
        transform: scale(1) translate(0, 0) rotate(0deg);
        opacity: 1;
        background-color: inherit;
    }
    10% {
        transform: scale(1.2) translate(0, -10px) rotate(calc(var(--vanish-rot) * 0.3));
        opacity: 0.95;
        background-color: inherit;
    }
    25% {
        transform: scale(0.8) translate(0, -25px) rotate(calc(var(--vanish-rot) * 0.7));
        opacity: 0.6;
        background-color: inherit;
    }
    100% { 
        transform: scale(0.2) translate(0, -60px) rotate(var(--vanish-rot));
        opacity: 0;
        background-color: inherit;
    }
}

@keyframes shrinkFadeAway {
    0% { 
        transform: scale(1);
        opacity: 1;
    }
    100% { 
        transform: scale(0.5);
        opacity: 0;
    }
}

/* Add these new keyframes near your other animation definitions */
@keyframes cardTwitch {
    0%, 95%, 100% { 
        transform: translate(0, 0) rotate(0deg); 
    }
    96% { 
        transform: translate(calc(var(--twitch-x, 25px) * 0.5), calc(var(--twitch-y, -20px) * 0.5)) rotate(calc(var(--twitch-rot, 12deg) * 0.5));
    }
    98% { 
        transform: translate(calc(var(--twitch-x, 25px) * -0.25), calc(var(--twitch-y, -20px) * -0.25)) rotate(calc(var(--twitch-rot, 12deg) * -0.25));
    }
}

/* Add chaotic twitching for higher chaos levels */
@keyframes cardTwitchChaos {
    0%, 75%, 100% { transform: rotate(0deg) translateY(0); }
    78% { transform: rotate(-3deg) translateY(-3px); }
    82% { transform: rotate(2.5deg) translateY(2px); }
    85% { transform: rotate(-2deg) translateY(-2px); }
    88% { transform: rotate(1.5deg) translateY(1px); }
    92% { transform: rotate(-1deg) translateY(-1px); }
}

/* Add jittery life-like movement */
@keyframes cardLife {
    0% { transform: translate(0, 0) rotate(0deg); }
    25% { transform: translate(1.5px, -1px) rotate(0.5deg); }
    50% { transform: translate(-1.5px, 1px) rotate(-0.5deg); }
    75% { transform: translate(1px, -1.5px) rotate(0.25deg); }
    100% { transform: translate(0, 0) rotate(0deg); }
}

@keyframes cardAlive {
    0% { transform: translate(0, 0) rotate(0deg); }
    25% { transform: translate(1px, -1px) rotate(0.3deg); }
    50% { transform: translate(-1px, 1px) rotate(-0.3deg); }
    75% { transform: translate(1px, 1px) rotate(0.2deg); }
    100% { transform: translate(0, 0) rotate(0deg); }
}

@keyframes cardAliveChaos1 {
    0% { transform: translate(0, 0) rotate(0deg); }
    33% { transform: translate(2px, -2px) rotate(0.5deg); }
    66% { transform: translate(-2px, 2px) rotate(-0.5deg); }
    100% { transform: translate(0, 0) rotate(0deg); }
}

@keyframes cardAliveChaos2 {
    0% { transform: translate(0, 0) rotate(0deg); }
    25% { transform: translate(3px, -2px) rotate(1deg); }
    50% { transform: translate(-3px, 3px) rotate(-1deg); }
    75% { transform: translate(2px, -3px) rotate(0.5deg); }
    100% { transform: translate(0, 0) rotate(0deg); }
}

@keyframes cardAliveChaos3 {
    0% { transform: translate(0, 0) rotate(0deg); }
    20% { transform: translate(4px, -3px) rotate(2deg); }
    40% { transform: translate(-4px, 4px) rotate(-2deg); }
    60% { transform: translate(3px, -4px) rotate(1.5deg); }
    80% { transform: translate(-3px, 3px) rotate(-1.5deg); }
    100% { transform: translate(0, 0) rotate(0deg); }
}

@keyframes unselectedCardVanish {
    0% { 
        transform: scale(1) translate(0, 0) rotate(0deg);
        opacity: 1;
        background-color: inherit;
    }
    10% {
        transform: scale(0.8) translate(calc(var(--fade-x) * 0.2), calc(var(--fade-y) * 0.2)) rotate(calc(var(--fade-rot) * 0.3));
        opacity: 0.5;
        background-color: inherit;
    }
    30% {
        transform: scale(0.5) translate(calc(var(--fade-x) * 0.5), calc(var(--fade-y) * 0.5)) rotate(calc(var(--fade-rot) * 0.7));
        opacity: 0.1;
        background-color: inherit;
    }
    100% { 
        transform: scale(0.2) translate(var(--fade-x), var(--fade-y)) rotate(var(--fade-rot));
        opacity: 0;
        background-color: inherit;
    }
}

@keyframes excitedWiggle {
    0% { transform: rotate(0deg) scale(1); }
    15% { transform: rotate(-5deg) scale(1.1); }
    30% { transform: rotate(4deg) scale(1.1); }
    45% { transform: rotate(-3deg) scale(1.08); }
    60% { transform: rotate(2deg) scale(1.05); }
    75% { transform: rotate(-1deg) scale(1.02); }
    100% { transform: rotate(0deg) scale(1); }
}

/* Add these new keyframes near your other card animations */
@keyframes chromaticBackground1 {
    0% { background: linear-gradient(45deg, #444, #474747); }
    50% { background: linear-gradient(45deg, #474747, #444); }
    100% { background: linear-gradient(45deg, #444, #474747); }
}

@keyframes chromaticBackground2 {
    0% { background: linear-gradient(45deg, #444, #484840); }
    50% { background: linear-gradient(45deg, #484840, #444848); }
    100% { background: linear-gradient(45deg, #444, #484840); }
}

@keyframes chromaticBackground3 {
    0% { background: linear-gradient(45deg, #444, #484438); }
    33% { background: linear-gradient(45deg, #484438, #444848); }
    66% { background: linear-gradient(45deg, #444848, #484844); }
    100% { background: linear-gradient(45deg, #444, #484438); }
}

@keyframes chromaticBackgroundMax {
    0% { background: linear-gradient(45deg, #444, #484438); }
    25% { background: linear-gradient(45deg, #484438, #444848); }
    50% { background: linear-gradient(45deg, #444848, #484844); }
    75% { background: linear-gradient(45deg, #484844, #483844); }
    100% { background: linear-gradient(45deg, #444, #484438); }
}

/* Add these new keyframes near your other animation definitions */
@keyframes colorCycleWord {
    0% { color: #3498db; }  /* Blue */
    25% { color: #2ecc71; }  /* Green */
    50% { color: #f1c40f; }  /* Yellow */
    75% { color: #e74c3c; }  /* Red */
    100% { color: #3498db; }  /* Blue */
}

@keyframes rainbowText {
    0% { color: #3498db; }  /* Blue */
    20% { color: #2ecc71; }  /* Green */
    40% { color: #f1c40f; }  /* Yellow */
    60% { color: #e74c3c; }  /* Red */
    80% { color: #9b59b6; }  /* Purple */
    100% { color: #3498db; }  /* Blue */
}

@keyframes chaosText {
    0% { color: #e74c3c; text-shadow: 0 0 5px #e74c3c33; }    /* Red */
    33% { color: #c0392b; text-shadow: 0 0 8px #c0392b33; }    /* Dark Red */
    66% { color: #ff5555; text-shadow: 0 0 12px #ff555533; }   /* Bright Red */
    100% { color: #e74c3c; text-shadow: 0 0 5px #e74c3c33; }   /* Red */
}

/* Add glow animation styles for upgrade activation */
@keyframes upgradeActivated {
    0% { 
        transform: scale(1); 
        opacity: 1; 
        box-shadow: 0 0 5px var(--glow-color, rgba(255, 244, 230, 0.3)),
                   0 0 10px var(--glow-color, rgba(255, 244, 230, 0.2));
    }
    50% { 
        transform: scale(1.1); 
        opacity: 0.8; 
        filter: brightness(1.5);
        box-shadow: 0 0 15px var(--glow-color, rgba(255, 244, 230, 0.5)),
                   0 0 30px var(--glow-color, rgba(255, 244, 230, 0.3));
    }
    100% { 
        transform: scale(1); 
        opacity: 1; 
        filter: brightness(1);
        box-shadow: 0 0 5px var(--glow-color, rgba(255, 244, 230, 0.3)),
                   0 0 10px var(--glow-color, rgba(255, 244, 230, 0.2));
    }
}

/* Add bounce animation for upgrade cards */
@keyframes upgradeBounce {
    0% { transform: scale(0.8); }
    100% { transform: scale(0.8); }
}

.upgrade-card {
    background-color: #333333;
    border: 1px solid #555;
    border-radius: 8px;
    padding: 8px;
    width: 115px;  /* Increased from 100px (15% larger) */
    height: 160px; /* Increased from 140px (about 15% larger) */
    margin: 5px;
    font-size: 12px;
    transform: scale(0.8);
    transition: transform 0.2s, box-shadow 0.2s;
    overflow: visible; /* Changed from hidden to allow popups to show outside card */
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    cursor: pointer;
    position: relative; /* Ensure positioned elements inside use this as reference */
}

.upgrade-card:hover {
    transform: scale(0.83);
    box-shadow: 0 0 8px rgba(255, 215, 0, 0.3);
}

.upgrade-card.activated {
    animation: upgradeActivated 0.8s ease-in-out;
    transform: scale(0.8) !important; /* Maintain scale but allow animation */
    --glow-color: rgba(255, 215, 0, 0.5); /* Golden glow for activated upgrades */
}

/* Color-specific activated states */
.upgrade-card.activated[data-effect="prestigeGain"] {
    --glow-color: rgba(241, 196, 15, 0.5); /* Golden */
}

.upgrade-card.activated[data-effect="chaosReduction"] {
    --glow-color: rgba(231, 76, 60, 0.5); /* Red */
}

.upgrade-card.activated[data-effect="workerEfficiency"] {
    --glow-color: rgba(52, 152, 219, 0.5); /* Blue */
}

.upgrade-card.activated[data-effect="ingredientGain"] {
    --glow-color: rgba(46, 204, 113, 0.5); /* Green */
}

/* Fix for upgrade card permanent effects display */
.upgrade-card .permanent-effects,
.upgrade-card .instant-effects {
    font-size: 1.1em; /* Keep original font size */
    margin-top: 2px;
    display: flex;
    flex-direction: column; /* Stack effects vertically */
    overflow-y: visible; /* Allow content to display properly */
    height: auto; /* Let height adjust to content */
}

/* Cost display for upgrade cards */
.cost-display {
    margin-top: auto;
    padding: 5px 0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: #ffd700; /* Gold color for money */
}

.cost-display .cost-icon {
    margin-right: 5px;
}

.cost-display.cannot-afford {
    color: #e74c3c; /* Red when can't afford */
}

/* Remove the circular position: absolute styling */
.cost-display {
    position: relative;
    top: auto;
    right: auto;
    background-color: transparent;
    border: none;
    border-radius: 0;
    width: auto;
    height: auto;
    box-shadow: none;
}

.card .permanent-effects,
.card .instant-effects {
    border-top: 1px solid #444;
    padding-top: 5px;
    margin-top: 5px;
}

@keyframes pulse-red {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Fix layout without changing font sizes */
.upgrade-card .upgrade-effects {
    margin-top: 5px; /* Reduced from auto */
    padding-top: 5px;
    border-top: 1px solid #555;
    display: flex;
    flex-direction: column;
}

/* Move the upgrades container up to give more space */
.upgrades-container {
    margin-top: -10px; /* Changed from 10px to -10px */
    padding: 10px;
    width: 100%;
    height: 250%;
}

.hidden {
    display: none !important;
}

html, body {
    overflow-x: hidden; /* Prevent horizontal scrollbar */
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* Internet Explorer and Edge */
}

/* Hide scrollbars for webkit browsers */
html::-webkit-scrollbar, body::-webkit-scrollbar {
    display: none;
}

body {
    background: #1a1a1a;
    color: #fff;
    font-family: 'Courier New', monospace;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start; /* Change from center to flex-start */
    min-height: 100vh; /* Change height to min-height */
    position: relative; /* Ensure position context for animations */
}

/* Update chaos level animations to keep impact but improve performance */
body.chaos-level-1 {
    animation: chaosBackgroundPulse 15s ease-in-out infinite !important;
    filter: hue-rotate(5deg) !important;
    background: linear-gradient(to right, #1a1a1a, #1a1818) !important;
}

body.chaos-level-2 {
    animation: chaosBackgroundPulse 10s ease-in-out infinite !important;
    filter: hue-rotate(15deg) saturate(1.2) !important;
    background: linear-gradient(to right, #1a1818, #181a1a) !important;
}

body.chaos-level-3 {
    animation: 
        chaosBackgroundPulse 5s ease-in-out infinite,
        maxChaosWarp 6s ease-in-out infinite,
        chaosShake 10s ease-in-out infinite !important;
    filter: hue-rotate(25deg) saturate(1.4) brightness(1.1) !important;
    background: linear-gradient(45deg, #181616, #161818) !important;
    transform-style: preserve-3d;
    perspective: 1000px;
}

/* Update chaos-level-max for better performance */
body.chaos-level-max {
    animation: 
        chaosBackgroundPulse 4s ease-in-out infinite,
        maxChaosWarp 6s ease-in-out infinite !important;
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
}

/* Remove the old glitch overlay and replace with heat distortion */
body.chaos-level-max::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        0deg,
        transparent,
        rgba(255, 255, 255, 0.03) 50%,
        transparent
    );
    pointer-events: none;
    z-index: 1;
    will-change: transform, opacity;
    animation: heatwaveGradient 4s ease-in-out infinite;
}

/* Optimize gradient animation */
@keyframes heatwaveGradient {
    0%, 100% { 
        opacity: 0.3;
        transform: translateY(0);
    }
    50% { 
        opacity: 0.2;
        transform: translateY(-5px);
    }
}

/* More impactful but efficient maxChaosWarp */
@keyframes maxChaosWarp {
    0%, 100% { 
        transform: perspective(2000px) rotate3d(1, 1, 0, 1deg); 
    }
    50% { 
        transform: perspective(2000px) rotate3d(-1, 1, 0, 1deg); 
    }
}

body.chaos-noise {
    position: relative !important;
    overflow: hidden !important;
}

body.chaos-noise::before {
    content: "" !important;
    position: fixed !important;
    top: 0 !important;
    left: 0 !important;
    width: 100% !important;
    height: 100% !important;
    pointer-events: none !important;
    z-index: 9999 !important;
    background-size: 100px 100px; /* Increase pattern size */
    opacity: 0.05 !important;
    animation: none; /* Remove animation */
}

#game-container {
    max-width: 800px;
    width: 100%;
    margin: 0 auto; /* Remove top margin */
    text-align: center;
    min-height: 600px;
    display: flex;
    flex-direction: column;
    position: relative;
    padding-top: 10px; /* Add small padding instead of margin */
    opacity: 1;
    transition: opacity 0.5s ease-out;
}

#game-container.chaos-level-2,
#game-container.chaos-level-3,
#game-container.chaos-level-max {
    position: relative !important;
    z-index: 1 !important;
}

#game-container.chaos-level-2::after,
#game-container.chaos-level-3::after,
#game-container.chaos-level-max::after {
    content: "" !important;
    position: absolute !important;
    top: 0 !important;
    left: 0 !important;
    right: 0 !important;
    bottom: 0 !important;
    pointer-events: none !important;
    z-index: -1 !important;
    background: radial-gradient(circle at 50% 50%, rgba(255,0,0,0.1), transparent) !important;
    animation: chaosColorShift 8s infinite !important;
}

.chaos-level-3 #game-container,
.chaos-level-max #game-container {
    animation: maxChaosWarp 6s ease-in-out infinite;
    will-change: transform;
    transform-style: preserve-3d;
    backface-visibility: hidden;
}

.chaos-level-max #game-container::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    background: transparent;
    mix-blend-mode: screen;
    animation: chromaticShift 4s ease-in-out infinite;
}

@keyframes chromaticShift {
    0% { text-shadow: 2px 0 0 #ff000033, -2px 0 0 #00ff0033; }
    50% { text-shadow: -2px 0 0 #ff000033, 2px 0 0 #00ff0033; }
    100% { text-shadow: 2px 0 0 #ff000033, -2px 0 0 #00ff0033; }
}

#stats {
    display: flex;
    justify-content: space-around;
    margin: 15px auto; /* Reduced from 20px */
    padding: 10px;
    background: #333;
    border-radius: 5px;
    width: 800px; /* Fixed width */
    max-width: calc(100% - 40px); /* Prevent overflow on small screens */
    box-sizing: border-box;
    min-height: 80px; /* Add fixed height */
    --float-speed: 6s;
    --float-distance: 0px;
    --rotation: 0deg;
    transform: 
        translateY(var(--float-distance))
        rotate(var(--rotation));
    animation: statsFloat var(--float-speed) ease-in-out infinite;
    --stats-glow-primary: rgba(255, 244, 230, 0.12);
    --stats-glow-secondary: rgba(255, 244, 230, 0.06);
    --stats-glow-outer: rgba(255, 244, 230, 0.03);
    box-shadow: 
        0 0 calc(5px * var(--glow-intensity)) var(--stats-glow-primary),
        0 0 calc(10px * var(--glow-intensity)) var(--stats-glow-secondary),
        0 0 calc(15px * var(--glow-intensity)) var(--stats-glow-outer);
    padding-bottom: 0;
}

.chaos-level-1 #stats {
    --float-speed: 5s;
    --float-distance: -2px;
}

.chaos-level-2 #stats {
    --float-speed: 4s;
    --float-distance: -3px;
    --rotation: 0.5deg;
}

.chaos-level-3 #stats {
    --float-speed: 3s;
    --float-distance: -4px;
    --rotation: 1deg;
}

.chaos-level-max #stats {
    --float-speed: 2s;
    --float-distance: -5px;
    --rotation: 2deg;
}

/* Resource State Effects */
#stats.balanced-state {
    animation: balanced-pulse 2s infinite;
    box-shadow: 0 0 15px rgba(255, 215, 0, 0.3);
}

#stats.critical-state {
    animation: critical-pulse 1.5s infinite;
    box-shadow: 0 0 15px rgba(255, 0, 0, 0.3);
}

#stats.harmony-state {
    animation: harmony-pulse 3s infinite;
    box-shadow: 0 0 15px rgba(0, 255, 255, 0.3);
}

#stats.perfect-state {
    animation: perfect-pulse 2s infinite;
    box-shadow: 0 0 20px rgba(255, 255, 255, 0.4);
}

@keyframes balanced-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.02); }
    100% { transform: scale(1); }
}

@keyframes critical-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.03); }
    100% { transform: scale(1); }
}

@keyframes harmony-pulse {
    0% { transform: scale(1); }
    50% { transform: scale(1.01); }
    100% { transform: scale(1); }
}

@keyframes perfect-pulse {
    0% { transform: scale(1); box-shadow: 0 0 20px rgba(255, 255, 255, 0.4); }
    50% { transform: scale(1.02); box-shadow: 0 0 30px rgba(255, 255, 255, 0.6); }
    100% { transform: scale(1); box-shadow: 0 0 20px rgba(255, 255, 255, 0.4); }
}

/* Stat value highlight effects for special states */
#stats.balanced-state .stat-value {
    text-shadow: 0 0 5px rgba(255, 215, 0, 0.5);
}

#stats.critical-state .stat-value {
    text-shadow: 0 0 5px rgba(255, 0, 0, 0.5);
}

#stats.harmony-state .stat-value {
    text-shadow: 0 0 5px rgba(0, 255, 255, 0.5);
}

#stats.perfect-state .stat-value {
    text-shadow: 0 0 8px rgba(255, 255, 255, 0.6);
}

/* Progress bar effects for special states */
#stats.balanced-state .stat-progress-fill {
    transition: width 0.3s ease-in-out;
    filter: brightness(1.2);
}

#stats.critical-state .stat-progress-fill {
    transition: width 0.2s ease-in-out;
    filter: brightness(1.3);
}

#stats.harmony-state .stat-progress-fill {
    transition: width 0.4s ease-in-out;
    filter: brightness(1.1);
}

#stats.perfect-state .stat-progress-fill {
    transition: width 0.3s ease-in-out;
    filter: brightness(1.4);
}

.stat {
    text-align: center;
    padding: 10px;
    width: 100px; /* Fix width */
    min-width: 100px; /* Ensure minimum width */
    display: flex;
    flex-direction: column;
    align-items: center;
    --jitter-amount: 0.2deg;
    transform: rotate(calc(var(--jitter-amount) * var(--chaos-intensity)));
    animation: statsJitter 2.5s ease-in-out infinite;
    position: relative;
    padding-bottom: 25px; /* Make room for resources row */
}

.stat-progress {
    width: 80px;
    height: 4px;
    background: transparent;
    border: 1px solid rgba(255, 255, 255, 0.3);
    border-radius: 2px;
    margin-top: 5px;
    overflow: hidden;
}

.stat-progress-fill {
    height: 100%;
    width: 0%;
    transition: width 0.3s ease-out;
}

.stat-progress-fill.prestige-color { background-color: #f1c40f; }
.stat-progress-fill.chaos-color { background-color: #e74c3c; }
.stat-progress-fill.ingredients-color { background-color: #2ecc71; }
.stat-progress-fill.energy-color { background-color: #3498db; }
.stat-progress-fill.turn-color { background-color: #9b59b6; }

/* Update the turn progress bar styles */
.stat-progress-fill.turn-color {
    width: 100% !important; /* Force full width */
    background: #9b59b6; /* Default purple */
    transition: background-color 0.3s ease;
}

/* Add chaos-based colors for the turn bar */
body.chaos-level-1 .stat-progress-fill.turn-color {
    background: linear-gradient(90deg, #9b59b6, #8e44ad);
    animation: pulseTempo 2s ease-in-out infinite;
}

body.chaos-level-2 .stat-progress-fill.turn-color {
    background: linear-gradient(90deg, #e74c3c, #c0392b);
    animation: pulseTempo 1.5s ease-in-out infinite;
}

body.chaos-level-3 .stat-progress-fill.turn-color {
    background: linear-gradient(90deg, #c0392b, #962d22);
    animation: pulseTempo 1s ease-in-out infinite;
}

body.chaos-level-max .stat-progress-fill.turn-color {
    background: linear-gradient(90deg, #ff0000, #990000);
    animation: pulseTempo 0.5s ease-in-out infinite;
}

@keyframes pulseTempo {
    0%, 100% { opacity: 0.8; }
    50% { opacity: 1; }
}

.stat-label {
    font-size: 0.9em;
    color: #ffffff;
    margin-bottom: 5px;
}

.stat-value {
    font-size: 1.8em;
    font-weight: bold;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    transition: transform 0.3s ease;
    display: inline-block;  /* Required for transform */
}

/* Add classes for stat changes */
.stat-value.changed {
    animation: statGlow 0.6s ease-in-out;
}

.stat-value.increase {
    animation: statGlow 0.6s ease-in-out;
}

.stat-value.decrease {
    animation: statDecrease 0.6s ease-in-out;
    color: #e74c3c !important;  /* Red color for decreases */
}

/* Color-specific glow effects */
.prestige-color.changed { text-shadow: 0 0 10px #f1c40f; }
.chaos-color.changed { text-shadow: 0 0 10px #e74c3c; }
.ingredients-color.changed { text-shadow: 0 0 10px #2ecc71; }
.energy-color.changed { text-shadow: 0 0 10px #3498db; }

/* Color-specific glow effects for increases */
.prestige-color.increase { text-shadow: 0 0 10px #f1c40f; }
.chaos-color.increase { text-shadow: 0 0 10px #e74c3c; }
.ingredients-color.increase { text-shadow: 0 0 10px #2ecc71; }
.energy-color.increase { text-shadow: 0 0 10px #3498db; }

/* Red glow effect for all decreases */
.stat-value.decrease { text-shadow: 0 0 10px #e74c3c; }

/* Update keyframes to ensure ingredients stats always return to green */
@keyframes ingredientsIncrease {
    0% { 
        transform: scale(1); 
    }
    50% { 
        transform: scale(1.3); 
        filter: brightness(1.5);
    }
    100% { 
        transform: scale(1);
        color: #2ecc71 !important; /* Force green with !important */
    }
}

@keyframes ingredientsDecrease {
    0% { 
        transform: scale(1); 
        color: #e74c3c;
    }
    50% { 
        transform: scale(1.3);
        color: #e74c3c;
    }
    100% { 
        transform: scale(1);
        color: #2ecc71 !important; /* Force green with !important */
    }
}

/* Give ingredients animations the highest priority */
.ingredients-color.increase {
    animation: ingredientsIncrease 1.5s ease-in-out forwards !important;
    text-shadow: 0 0 10px #2ecc71;
    color: #2ecc71 !important; /* Ensure green after animation */
}

.ingredients-color.decrease {
    animation: ingredientsDecrease 1.8s ease-in-out forwards !important;
    text-shadow: 0 0 10px #e74c3c;
    color: #2ecc71 !important; /* Ensure green after animation */
}

/* Override chaos-level-max for ingredients stats specifically */
.chaos-level-max .stat-value.ingredients-color {
    animation: crtFlicker 2s infinite, ingredientsPulse 2s infinite !important;
    color: #2ecc71 !important; /* Keep ingredients green in max chaos */
}

/* New animation that maintains green color while applying effects */
@keyframes ingredientsPulse {
    0%, 100% { color: #2ecc71 !important; }
    50% { color: #2ecc71 !important; filter: brightness(1.2); }
}

/* Ensure ingredients color takes precedence after increase/decrease */
.chaos-level-1 .ingredients-color,
.chaos-level-2 .ingredients-color,
.chaos-level-3 .ingredients-color,
.chaos-level-max .ingredients-color {
    color: #2ecc71 !important;
}

/* Stat-specific colors */
.prestige-color {
    color: #f1c40f; /* Golden yellow */
}

.chaos-color {
    color: #e74c3c; /* Red */
}

.ingredients-color {
    color: #2ecc71; /* Green */
}

.energy-color {
    color: #3498db; /* Blue */
}

.turn-color {
    color: #9b59b6; /* Purple */
}

/* Color classes for stat names */
.prestige-color { color: #f1c40f; }    /* Golden yellow */
.chaos-color { color: #e74c3c; }        /* Red */
.ingredients-color { color: #2ecc71; }  /* Green */
.energy-color { color: #3498db; }       /* Blue */

/* Plus/minus sign colors */
.positive { color: #2ecc71 !important; } /* Always green for plus */
.negative { color: #e74c3c !important; } /* Always red for minus */

/* Add matching color classes for stat modifiers using the same colors as stat bars */
.stat-modifier.prestige {
    color: var(--prestige-color, #27ae60);  /* matches prestige-color */
}

.stat-modifier.chaos {
    color: var(--chaos-color, #e74c3c);  /* matches chaos-color */
}

.stat-modifier.ingredients {
    color: var(--ingredients-color, #f39c12);  /* matches ingredients-color */
}

.stat-modifier.workers {
    color: var(--energy-color, #3498db);  /* matches energy-color */
}

.turn-score {
    color: #9b59b6 !important; /* Same purple as turn-color */
}

h1 {
    font-size: 3em;
    margin: 10px 0; /* Reduce top and bottom margins */
    text-align: center;
    color: #d35400;
}

/* Update margin for cards container */
#cards-container {
    width: 500px; /* Increased from 400px to accommodate wider cards with proper spacing */
    height: 320px;
    margin: 30px auto 20px;
    display: flex;
    justify-content: center;
    gap: 40px; /* Fixed gap between cards */
    align-items: center;
    position: relative;
    perspective: 1000px;
    transition: opacity 0.3s ease-out;
    box-sizing: border-box;
    overflow: visible;
}

/* Base card styles */
.card {
    width: 200px;  /* Wider card width for better proportions */
    height: 280px;
    background: #333;
    border: 1px solid #555;
    border-radius: 10px;
    padding: 15px;
    margin: 0;
    display: flex;
    flex-direction: column;
    position: relative;
    cursor: pointer;
    backface-visibility: hidden;
    transform-origin: center center;
    transform-style: preserve-3d;
    will-change: transform;
    perspective: 1000px;
    --glow-intensity: 1;
    animation: cardFloat calc(var(--base-duration, 3s) + (var(--animation-offset, 0s))) cubic-bezier(0.4, 0, 0.6, 1) infinite;
}

.card h3 {
    font-size: 1.2em; /* Reduced from 1.2em */
    margin-top: 0; /* Add this to remove any top margin */
    margin-bottom: 8px; /* Reduced from 10px */
    color: #f39c12;
}

.card .effects-label {
    font-size: 0.75em; /* Reduced from 0.7em */
    color: #d2d3d2;
    margin-bottom: 2px; /* Reduced from 3px */
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

/* Add cost display styling */
.card .cost-display {
    border-top: 1px solid #444;
    margin-top: auto;
    /* padding: 4px 0;  Reduced from 5px */
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    font-size: 0.95em; /* Added explicit font size reduction */
    color: #ffd700; /* Gold color for money */
}

.card .cost-display .cost-icon {
    margin-right: 5px;
}

.card .cost-display.cannot-afford {
    color: #e74c3c; /* Red when can't afford */
}

.card .permanent-effects,
.card .instant-effects {
    border-top: 1px solid #444;
    margin-top: 5px; /* Reduced from 6px */
    padding-top: 5px; /* Reduced from 6px */
}

.card-description {
    font-size: 0.85em; /* Reduced from 0.9em */
    color: #e9e8e8;
    line-height: 1.35; /* Adjusted from 1.4 */
    margin-bottom: auto;
    padding: 8px 0; /* Reduced from 10px */
}

.card-effects {
    margin-top: auto;
    padding-top: 8px; /* Reduced from 10px */
    font-size: 0.94em; /* Reduced from 0.9em */
    border-top: 1px solid #555;
}

/* Fix card selection animations */
.card[data-selected="true"] {
    position: absolute;
    z-index: 2;
    animation: selectedCardVanish 0.8s ease-out forwards !important;
    transform-origin: center center;
}

.card[data-selected="false"] {
    position: absolute;
    z-index: 1;
    animation: unselectedCardVanish 0.4s ease-out forwards !important;
    transform-origin: center center;
    opacity: 0.8;
}

.stat-modifier {
    display: block;
    margin: 3px 0; /* Reduced from 4px */
    font-size: 1.1em; /* Added explicit font size */
    font-weight: bold;
}

.card.unplayable {
    opacity: 0.85;
    cursor: not-allowed;
    background: #383838;
    filter: grayscale(50%);
    border: 1px solid #555;
}

.card.unplayable:hover {
    transform: none;
    background: #383838;
}

.card.unplayable h3 {
    color: #888;  /* Changed from #666 to #888 */
}

.card.unplayable .card-description {
    color: #aaa;  /* Changed from #555 to #aaa */
}

.card.unplayable .card-effects {
    opacity: 0.8;  /* Changed from 0.6 to 0.8 */
}

.card.unplayable .requirement-text {
    color: #ff8080;  /* Brighter red for better visibility */
    font-size: 0.85em; /* Reduced from 0.9em */
    margin-top: 4px; /* Reduced from 5px */
    padding-top: 4px; /* Reduced from 5px */
    border-top: 1px solid #555;
    font-style: italic;
    text-transform: uppercase;
    letter-spacing: 0.9px; /* Slightly reduced from 1px */
    font-weight: bold;
}

.requirement-text {
    color: #ff6b6b;  /* Brightened from #e74c3c */
    font-size: 0.85em; /* Reduced from 0.9em */
    margin-top: 4px; /* Reduced from 5px */
    border-top: 1px solid #555;
    padding-top: 4px; /* Reduced from 5px */
    font-style: italic;
    text-transform: uppercase;
    letter-spacing: 0.9px; /* Slightly reduced from 1px */
    font-weight: bold;  /* Added for better visibility */
}

.button {
    background-color: #d35400;
    color: white;
    border: none;
    border-radius: 5px;
    padding: 10px 20px;
    cursor: pointer;
    font-size: 1.2em;
    transition: background-color 0.3s;
    width: 200px;  /* Set consistent width for all buttons */
}

.button:hover {
    background-color: #e67e22;
}

.button:disabled {
    background-color: #7f8c8d;
    cursor: not-allowed;
}

.button.primary {
    padding: 10px 20px;
    margin: 20px 0;
    font: normal 1em "retro", monospace;
    width: 200px;
}

.button.secondary {
    background-color: #325980;  
    margin: 0; 
    font: normal 1em "retro", monospace;
}

.button.secondary:hover {
    background-color: #34495e;  /* Matching hover state */
}

.button.secondary.small {
    font-size: 0.8em;
    padding: 5px 10px;
    position: absolute;
    bottom: 10px;
    right: 10px;
    background-color: #e74c3c; /* Red color for reset achievements */
}

#share-results {
    font-size: 0.9em;
    padding: 8px 16px;
    position: absolute;
    bottom: 45px;
    right: 10px;
    background-color: #3498db; /* New blue color */
}

.meter {
    width: 100%;
    background-color: #e0e0e0;
    border-radius: 5px;
    margin: 10px 0;
}

.meter-fill {
    height: 20px;
    border-radius: 5px;
    transition: width 0.3s;
}

.light-glow {
    --glow-intensity: 1;
    --glow-color: rgba(255, 244, 230, 0.15);
    box-shadow: 0 0 calc(10px * var(--glow-intensity)) var(--glow-color),
                0 0 calc(20px * var(--glow-intensity)) var(--glow-color);
    transition: box-shadow 0.5s ease-out;
}

#game-messages {
    position: relative;
    width: 100%;
    min-height: 60px;
    max-height: 120px;
    margin: 15px auto;
    padding: 10px 15px;
    border-radius: 6px;
    background-color: rgba(20, 20, 20, 0.8);
    color: #ffd700;
    font-size: 16px;
    text-align: center;
    box-shadow: 0 0 15px rgba(0, 0, 0, 0.5);
    overflow-y: auto;
    cursor: pointer;
    transition: all 0.3s ease;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;

    /* Hide scrollbar but keep scroll functionality */
    scrollbar-width: none; /* Firefox */
    -ms-overflow-style: none; /* IE and Edge */
}

/* Hide scrollbar for Chrome, Safari and Opera */
#game-messages::-webkit-scrollbar {
    display: none;
}

#game-messages:hover {
    background-color: rgba(30, 30, 30, 0.9);
    transform: scale(1.02);
}

.message-container {
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 4px 0;
    text-align: center;
    animation: messageFadeIn 0.8s ease forwards;
    transition: opacity 0.8s ease, transform 0.8s ease;
}

.message-container.previous-message {
    opacity: 0.7;
    font-size: 0.9em;
}

.message-divider {
    width: 80%;
    height: 1px;
    background: linear-gradient(to right, transparent, rgba(255,255,255,0.2), transparent);
    margin: 2px auto;
}

.message-icon {
    font-size: 1.2em;
    margin-right: 3px; /* Reduced from 6px to 3px to move icons closer to text */
    flex-shrink: 0;
}

.message-text {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    text-align: center;
    line-height: 1.3;
    max-width: 95%; /* Increased from 90% to 95% for better display */
}

@keyframes messageFadeIn {
    0% {
        opacity: 0;
        transform: translateY(-5px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Message history modal styles */
.message-history-modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 80%;
    max-width: 600px;
    max-height: 80vh;
    background-color: rgba(20, 20, 20, 0.95);
    border: 2px solid #444;
    border-radius: 8px;
    padding: 15px;
    z-index: 1001;
    display: none;
    flex-direction: column;
}

.message-history-modal.active {
    display: flex;
}

.message-history-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #555;
    padding-bottom: 10px;
    margin-bottom: 10px;
}

.message-history-header h3 {
    margin: 0;
    color: #ffd700;
}

.message-history-close {
    background: none;
    border: none;
    color: #aaa;
    font-size: 24px;
    cursor: pointer;
    transition: color 0.3s;
}

.message-history-close:hover {
    color: #fff;
}

.message-history-content {
    overflow-y: auto;
    flex-grow: 1;
    padding-right: 10px;
}

.message-history-item {
    position: relative;
    margin-bottom: 15px;
    padding: 10px;
    border-radius: 8px;
    animation: none !important;
}

.message-history-item:last-child {
    margin-bottom: 0;
}

.message-history-item.feedback {
    background: rgba(255, 215, 0, 0.1);
    border-left: 3px solid #ffd700;
}

.message-history-item.situation {
    background: rgba(52, 152, 219, 0.1);
    border-left: 3px solid #3498db;
}

.message-history-item.chaos-warning {
    background: rgba(231, 76, 60, 0.1);
    border-left: 3px solid #e74c3c;
}

.message-history-item.production {
    background: rgba(243, 156, 18, 0.1);
    border-left: 3px solid #f39c12;
}

.message-history-item.sales {
    background: rgba(46, 204, 113, 0.1);
    border-left: 3px solid #2ecc71;
}

.message-history-time {
    font-size: 0.8em;
    color: #7f8c8d;
    margin-bottom: 5px;
}

.message-history-text {
    color: inherit;
}

.message-history-turn {
    position: absolute;
    top: 8px;
    right: 10px;
    font-size: 0.8em;
    color: #fff;
    background-color: rgba(0, 0, 0, 0.5);
    padding: 2px 6px;
    border-radius: 10px;
    font-weight: bold;
}

.message-history-item.feedback .message-history-text {
    color: #ffd700;
}

.message-history-item.situation .message-history-text {
    color: #3498db;
}

.message-history-item.chaos-warning .message-history-text {
    color: #e74c3c;
}

/* Overlay styles */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1999;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

.modal-overlay.active {
    opacity: 1;
    visibility: visible;
}

.message-history-turn {
    position: absolute;
    top: 8px;
    right: 10px;
    font-size: 0.75em;
    color: #aaa;
    background-color: rgba(0, 0, 0, 0.3);
    padding: 2px 6px;
    border-radius: 10px;
}

#game-messages:hover {
    box-shadow: 0 0 10px rgba(255, 255, 255, 0.3);
}

#game-messages::after {
    display: none;
}

#game-messages:hover::after {
    display: none;
}

.chaos-level-1 .message-box {
    --wave-intensity: 1;
    --color-shift: 5deg;
    background: rgba(30, 30, 32, 0.8);
    animation: subtlePulse 4s infinite;
}

.chaos-level-2 .message-box {
    --wave-intensity: 2;
    --color-shift: 10deg;
    background: rgba(35, 30, 40, 0.85);
    animation: subtlePulse 3s infinite;
}

.chaos-level-3 .message-box {
    --wave-intensity: 3;
    --color-shift: 15deg;
    --brightness: 1.1;
    background: linear-gradient(45deg, #272d40, #402d3a);
    animation: mediumPulse 2.5s infinite;
}

.chaos-level-max .message-box {
    --wave-intensity: 4;
    --color-shift: 20deg;
    --brightness: 1.2;
    animation: heatwave 3s infinite;
    background: linear-gradient(45deg, #2c3e50, #c0392b);
}

@keyframes subtlePulse {
    0%, 100% { background-color: rgba(30, 30, 32, 0.8); }
    50% { background-color: rgba(35, 32, 40, 0.85); }
}

@keyframes mediumPulse {
    0%, 100% { background: linear-gradient(45deg, #272d40, #402d3a); }
    50% { background: linear-gradient(45deg, #302e45, #453035); }
}

/* Update message type styles */
.message-box.feedback .message-text span {
    color: #ffd700; /* Yellow for feedback */
}

.message-box.situation .message-text span {
    color: #3498db; /* Blue for situations */
}

.message-box.chaos-warning .message-text span {
    color: #e74c3c; /* Red for chaos warnings */
    text-shadow: 0 0 5px rgba(231, 76, 60, 0.5);
}

.message-box.tooltip {
    color: #ffd700; /* Make tooltips stand out with golden color */
    font-style: italic;
    text-shadow: 0 0 5px rgba(255, 215, 0, 0.3); /* Subtle glow */
}

.message-box.fading {
    opacity: 0;
}

.message-box.showing {
    opacity: 1;
}

/* Add specific color for feedback messages */
.message-box.feedback {
    color: #ffd700; /* Yellow for feedback */
}

/* Add specific color for situation messages */
.message-box.situation {
    color: #3498db; /* Blue for situations */
}

/* Add styles for message text container */
.message-text {
    display: -webkit-box;
    -webkit-line-clamp: 2; /* Show max 2 lines */
    line-clamp: 2; /* Standard property */
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
    width: 95%;
    margin: 0 auto;
    line-height: 1.2;
    text-align: center;
    transition: opacity 0.8s ease;
}

.message-text.fading {
    opacity: 0;
}

/* Message history modal styles */
.message-history-modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: rgba(30, 30, 30, 0.95);
    border: 2px solid #3498db;
    border-radius: 10px;
    width: 80%;
    max-width: 600px;
    max-height: 80vh;
    z-index: 2000;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    box-shadow: 0 0 20px rgba(52, 152, 219, 0.5);
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

.message-history-modal.active {
    opacity: 1;
    visibility: visible;
}

.message-history-header {
    background: #2c3e50;
    padding: 12px 15px;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #3498db;
}

.message-history-title {
    color: #3498db;
    font-size: 1.2em;
    margin: 0;
    font-weight: bold;
}

.message-history-close {
    background: none;
    border: none;
    color: #e74c3c;
    font-size: 1.5em;
    cursor: pointer;
    line-height: 0.8;
    padding: 5px;
}

.message-history-content {
    padding: 15px;
    overflow-y: auto;
    flex-grow: 1;
    max-height: calc(80vh - 60px);
}

.message-history-item {
    margin-bottom: 15px;
    padding: 10px;
    border-radius: 8px;
    animation: none !important;
}

.message-history-item:last-child {
    margin-bottom: 0;
}

.message-history-item.feedback {
    background: rgba(255, 215, 0, 0.1);
    border-left: 3px solid #ffd700;
}

.message-history-item.situation {
    background: rgba(52, 152, 219, 0.1);
    border-left: 3px solid #3498db;
}

.message-history-item.chaos-warning {
    background: rgba(231, 76, 60, 0.1);
    border-left: 3px solid #e74c3c;
}

.message-history-time {
    font-size: 0.8em;
    color: #7f8c8d;
    margin-bottom: 5px;
}

.message-history-text {
    color: inherit;
}

.message-history-item.feedback .message-history-text {
    color: #ffd700;
}

.message-history-item.situation .message-history-text {
    color: #3498db;
}

.message-history-item.chaos-warning .message-history-text {
    color: #e74c3c;
}

/* Overlay styles */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    z-index: 1999;
    opacity: 0;
    visibility: hidden;
    transition: opacity 0.3s ease, visibility 0.3s ease;
}

.modal-overlay.active {
    opacity: 1;
    visibility: visible;
}

.achievement-popups-container {
    position: fixed;
    top: 20px;
    right: 20px;
    display: flex;
    flex-direction: column;
    gap: 1px;
    z-index: 1000;
    pointer-events: none;
    width: 320px; /* Fixed width container */
}

.achievement-popup {
    position: relative;
    background: linear-gradient(135deg, #2c3e50, #3498db);
    border: 2px solid #f1c40e;
    border-radius: 8px;
    padding: 6px 16px;
    color: #fff;
    box-shadow: 0 4px 15px rgba(0,0,0,0.3);
    width: 100%;
    box-sizing: border-box;
    min-height: 50px;
    pointer-events: auto;
    transform-origin: right;
    opacity: 0;
    transform: translateX(100%);
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
}

.achievement-popup.show {
    opacity: 1;
    transform: translateX(0);
}

.achievement-popup h3 {
    color: #f1c40f;
    font-size: 1em; /* Reduced */
    margin: 0 0 1px 0;
    text-shadow: 0 2px 4px rgba(0,0,0,0.3);
}

.achievement-popup .achievement-name {
    color: #2ecc71;
    font-size: 0.9em;
    margin: 1px 0;
    font-weight: bold;
}

.achievement-popup .achievement-desc {
    color: #ecf0f1;
    font-size: 0.8em;
    margin: 1px 0;
    line-height: 1.1;
}

.achievement-popup .achievement-reward {
    color: #f1c40e;
    font-size: 0.85em;
    margin: 1px 0;
    font-style: italic;
}

.achievement-popups-container {
    position: fixed;
    top: 20px;
    right: 20px;
    display: flex;
    flex-direction: column;
    gap: 1px; /* Further reduced gap */
    z-index: 1000;
    pointer-events: none;
}

@media screen and (max-width: 768px) {
    .achievement-popups-container {
        width: 100%;
        right: 0;
        padding: 0 10px;
        box-sizing: border-box;
    }

    .achievement-popup {
        width: 100%;
        margin: 0;
        padding: 6px 12px;
    }

    .achievement-popup h3 {
        font-size: 0.95em;
    }

    .achievement-popup .achievement-name {
        font-size: 0.85em;
    }

    .achievement-popup .achievement-desc {
        font-size: 0.8em;
    }

    .achievement-popup .achievement-reward {
        font-size: 0.8em;
    }

    .message-history-modal {
        width: 95%;
        max-height: 90vh;
    }
    
    .message-history-content {
        max-height: calc(90vh - 60px);
    }
    
    #game-messages::after {
        font-size: 0.8em;
        right: 5px;
    }
}

/* Adjust chaos level classes to be less intense */
.chaos-level-1 .card {
    animation: subtleWiggle 4s ease-in-out infinite;
    filter: brightness(1.02);
}

.chaos-level-2 .card {
    animation: subtleWiggle 3s ease-in-out infinite, subtleDistort 5s infinite;
    filter: brightness(1.05) hue-rotate(2deg);
}

.chaos-level-3 .card {
    animation: distort 4s infinite, wiggle 3s infinite;
    filter: brightness(1.1) hue-rotate(5deg);
}

/* Update chaos level classes to prevent mobile scaling */
.chaos-level-1 {
    animation: chaosWarp 15s infinite;
    filter: hue-rotate(5deg);
    transform: none !important;
    width: 100%;
    overflow-x: hidden;
}

.chaos-level-2 {
    animation: chaosWarp 12s infinite;
    filter: hue-rotate(15deg) saturate(1.15);
    transform: none !important;
    width: 100%;
    overflow-x: hidden;
}

.chaos-level-3 {
    animation: 
        chaosBackgroundPulse 5s ease-in-out infinite,
        maxChaosWarp 6s ease-in-out infinite,
        chaosShake 10s ease-in-out infinite !important;
    filter: hue-rotate(25deg) saturate(1.4) brightness(1.1) !important;
    transform: none !important;
    width: 100%;
    overflow-x: hidden;
}

.chaos-level-max {
    animation: 
        chaosBackgroundPulse 4s ease-in-out infinite,
        maxChaosWarp 6s ease-in-out infinite !important;
    will-change: transform;
    backface-visibility: hidden;
    perspective: 1000px;
}

.chaos-level-max body {
    animation: subtleWiggle 6s infinite;
    filter: saturate(120%);
}

.chaos-level-max #game-container {
    animation: maxChaosWarp 6s ease-in-out infinite;
    will-change: transform;
    transform-style: preserve-3d;
    backface-visibility: hidden;
}

.chaos-level-max #stats {
    animation: 
        statsFloat 4s ease-in-out infinite,
        chaoticSpin 6s infinite !important;
}

.chaos-level-max .stat-value {
    animation: crtFlicker 2s infinite;
    text-shadow: 
        0.5px 0.5px rgba(255,0,0,0.3),
        -0.5px -0.5px rgba(0,255,0,0.3);
}

.chaos-level-max h1 {
    animation: crtWave 6s infinite;
    filter: contrast(110%);
}

.chaos-level-max .message-box {
    animation: heatwave 3s infinite;
    background: linear-gradient(45deg, #2c3e50, #c0392b);
}

/* Update the noise effect to be more like a CRT screen */
.chaos-noise::before {
    content: "";
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: repeating-linear-gradient(
        0deg,
        rgba(0, 0, 0, 0.1),
        rgba(0, 0, 0, 0.1) 1px,
        transparent 1px,
        transparent 2px
    );
    pointer-events: none;
    animation: scanline 10s linear infinite;
    opacity: 0.08;
    z-index: 9999;
}

.chaos-noise {
    animation: chaosNoise 4s infinite;
}

/* noodle rain styles */
.chaos-noodle {
    position: fixed;
    pointer-events: none;
    z-index: 1000;
    opacity: 0.8;
    width: var(--noodle-length, 40px); /* Make width dynamic */
    height: 20px;
    top: -20px;
}

.noodle-decoration {
    animation: noodleFlyAcross 8s ease-in-out forwards;  /* Added 'forwards' to maintain final state */
    position: fixed;
    bottom: 20px;
    left: 0;
    width: 100%;
    pointer-events: none;
    z-index: 1000;
    opacity: 0;  /* Start hidden */
}

.noodle-worm {
    width: 100%;
    height: 100%;
    display: block;
    animation: noodleWiggle 0.8s ease-in-out;
    transform-origin: center center;
    transform-box: fill-box;
}

.noodle-worm.moving {
    animation: noodleWiggle 1.2s ease-in-out infinite;
}

.game-over-screen {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    transform: none;
    background: rgba(0, 0, 0, 0.95);
    padding: 2rem;
    border: none;
    border-radius: 0;
    box-shadow: none;
    z-index: 1000;
    width: 100%;
    height: 100%;
    max-width: none;
    max-height: none;
    overflow-y: auto;
    box-sizing: border-box;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    animation: gameOverFlash 0.6s ease-in-out 2;
    /* Add these properties to prevent resizing */
    transition: none !important;
    transform: none !important;
    animation-fill-mode: forwards;
}

.game-over-content {
    width: 100%;
    max-width: 800px;
    margin: 2rem auto;
    text-align: center;
    position: relative;
    padding-bottom: 100px;
    /* Fix dimensions and prevent automatic resizing */
    transform: none !important;
    transition: none !important;
}

.game-over-header {
    color: #ff0000;
    font-size: 4em;
    font-weight: bold;
    text-transform: uppercase;
    text-shadow: 0 0 20px rgba(255, 0, 0, 0.7);
    margin: 1rem 0 2rem 0;
    letter-spacing: 4px;
    animation: pulseText 2s infinite;
}

.end-reason {
    color: #ffffff;
    font-size: 1.4em;
    margin: 2rem auto;
    line-height: 1.5;
    padding: 1.5rem;
    background: rgba(255, 255, 255, 0.1);
    border-radius: 8px;
    text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
    max-width: 600px;
}

@keyframes pulseText {
    0% { text-shadow: 0 0 20px rgba(255, 0, 0, 0.7); }
    50% { text-shadow: 0 0 40px rgba(255, 0, 0, 0.9), 0 0 60px rgba(255, 0, 0, 0.4); }
    100% { text-shadow: 0 0 20px rgba(255, 0, 0, 0.7); }
}

@media screen and (max-width: 768px) {
    .game-over-screen {
        padding: 1rem;
    }

    .game-over-header {
        font-size: 3em;
        margin: 0.5rem 0 1rem 0;
    }

    .end-reason {
        font-size: 1.2em;
        margin: 1rem auto;
        padding: 1rem;
    }

    .game-over-content {
        margin: 1rem auto;
        padding-bottom: 80px;
    }
}

.secondary-buttons {
    position: sticky;
    bottom: 0;
    background: rgba(26, 26, 26, 0.9); /* Match your background color */
    padding: 10px;
    z-index: 1;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.primary-button {
    margin: 20px 0;
}

.game-over-content h2 {
    color: #e74c3c;
    font-size: 2em; /* Reduced from 2.5em */
    margin-bottom: 0.75rem; /* Reduced from 1rem */
}

.final-stats {
    margin: 1.5rem 0; /* Reduced from 2rem */
}

.stat-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
    gap: 0.75rem; /* Reduced from 1rem */
    margin: 0.75rem 0; /* Reduced from 1rem */
}

.final-stat {
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 0.75rem; /* Reduced from 1rem */
    background: rgba(255, 255, 255, 0.1);
    border-radius: 5px;
}

.final-stat span:first-child {
    font-size: 0.9em;
    margin-bottom: 0.5rem;
}

.final-stat span:last-child {
    font-size: 1.5em; /* Reduced from 1.8em */
    font-weight: bold;
}

.achievements-section {
    position: relative;
    margin: 1.5rem 0;
    padding-bottom: 60px; /* Increased to accommodate buttons */
}

.achievements-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr)); /* Reduced from 200px */
    gap: 0.75rem; /* Reduced from 1rem */
    margin: 0.75rem 0; /* Reduced from 1rem */
}

.achievement-item {
    background: rgba(255, 255, 255, 0.1);
    padding: 0.75rem; /* Reduced from 1rem */
    border-radius: 5px;
    text-align: left;
    font-size: 0.85em; /* Additional reduction for achievements */
}

.achievement-name {
    display: block;
    color: #f1c40f;
    font-weight: bold;
    margin-bottom: 0.5rem;
}

.achievement-desc {
    display: block;
    color: #bbb;
    font-size: 0.9em;
}

#new-game {
    display: block;
    width: 200px;
    margin: 1.5rem auto; /* Center the button */
    font-size: 1.1em; /* Reduced from 1.2em */
    padding: 0.6rem 1.75rem; /* Reduced from 0.75rem 2rem */
    margin-top: 1.5rem; /* Reduced from 2rem */
    background: #e67e22;
    transition: background-color 0.3s;
    white-space: nowrap; /* Keep text on one line */
    height: auto; /* Let height be determined by content */
    line-height: 1.2; /* Adjust line height to be more compact */
}

#new-game:hover {
    background: #d35400;
}

.jiggly {
    display: inline-block;
    animation: none;
}

.jiggly.active {
    animation: noodleWiggle 0.8s ease-in-out;
}

/* Remove hover effect to make it more subtle */
.jiggly:hover {
    animation: none;
}

/* Add near other game-over related styles */
.score-display {
    display: flex;
    justify-content: center;
    gap: 1.5rem; /* Reduced from 2rem */
    margin: 1.5rem 0; /* Reduced from 2rem */
    padding: 0.75rem; /* Reduced from 1rem */
    background: rgba(255, 255, 255, 0.1);
    border-radius: 10px;
}

.current-score,
.high-score {
    text-align: center;
}

.score-value {
    display: block;
    font-size: 2.5em; /* Reduced from 3em */
    font-weight: bold;
    color: #FF00FF;
    margin: 0.4rem 0; /* Reduced from 0.5rem */
}

/* Add a glow effect when new high score is achieved */
.new-high-score .score-value {
    animation: glow 1s ease-in-out infinite alternate;
}

@keyframes glow {
    from {
        text-shadow: 0 0 5px #fff, 0 0 10px #fff, 0 0 15px #e67e22;
    }
    to {
        text-shadow: 0 0 10px #fff, 0 0 20px #fff, 0 0 30px #e67e22;
    }
}

/* Add these media queries at the end of your CSS file */
@media screen and (max-width: 768px) {
    h1 {
        font-size: 2em;
        margin-bottom: 10px;
    }

    #stats {
        margin: 15px auto;
        width: 92%; /* Slightly narrower to prevent overflow */
        gap: 4px; /* Reduced gap between stats */
        padding: 6px;
        justify-content: space-between;
        flex-wrap: nowrap;
        overflow-x: hidden;
    }

    .stat {
        padding: 4px;
        min-width: 0; /* Allow stats to shrink */
        margin: 0;
        flex: 1;
        width: auto; /* Let flex handle the width */
    }

    .stat-value {
        font-size: 1em;
        /* Keep animation properties */
        display: inline-block;
        transition: transform 0.3s ease;
    }

    .stat-value.increase,
    .stat-value.decrease {
        animation-duration: 0.6s;
        animation-timing-function: ease-in-out;
    }

    /* Ensure color-specific effects remain */
    .prestige-color.increase { text-shadow: 0 0 10px #f1c40f; }
    .chaos-color.increase { text-shadow: 0 0 10px #e74c3c; }
    .ingredients-color.increase { text-shadow: 0 0 10px #2ecc71; }
    .energy-color.increase { text-shadow: 0 0 10px #3498db; }
    
    .stat-value.decrease { text-shadow: 0 0 10px #e74c3c; }

    .stat-label {
        font-size: 0.7em; /* Even smaller label */
        white-space: nowrap;
    }

    .stat-progress {
        margin: 3px auto;
        width: 85%; /* Slightly narrower progress bar */
    }

    #cards-container {
        gap: 20px; /* Restore original gap */
        margin: 20px auto;
        width: 95%; /* Give more width */
        max-width: 600px;
        overflow-x: visible; /* Allow cards to be fully visible */
        
    }

    .card {
        width: 45%; /* Use percentage instead of calc */
        min-width: 140px;
        margin: 0; /* Remove margin since we have gap */
        padding: 12px;
    }

    #game-container {
        width: 100%;
        padding: 0 10px;
        box-sizing: border-box;
        overflow-x: hidden;
    }

    #game-messages {
        margin: 15px auto; /* Match stats container margin */
        width: calc(100% - 20px); /* Adjust width calculation for mobile */
        max-width: calc(100vw - 20px);
        overflow-x: hidden;
    }

    .message-box {
        padding: 8px;
        font-size: 0.9em;
        min-height: 25px;
        height: auto;
    }

    .button {
        padding: 8px 16px;
        font-size: 1em;
    }

    body.chaos-level-2,
    body.chaos-level-3,
    body.chaos-level-max {
        animation-duration: 8s !important;
    }

    body.chaos-level-max {
        filter: hue-rotate(25deg) saturate(1.4) brightness(1.1) !important;
    }

    .achievements-section {
        padding-bottom: 100px; /* More space for stacked buttons */
    }

    #new-game {
        width: 80%; /* Make button wider on mobile */
        max-width: 300px;
        margin: 1rem auto;
    }

    #share-results {
        width: auto;
        bottom: 50px;
        right: 10px;
    }

    .button.secondary.small {
        width: auto;
        bottom: 10px;
        right: 10px;
    }

    /* Ensure played card animations still work */
    .card.played[data-selected="true"] {
        animation: touchExcited 0.4s ease-in-out !important;
        transform: scale(0.8) translateY(-20px) !important;
    }

    .card.played:not([data-selected="true"]) {
        animation: none !important;
        transform: scale(0.5) !important;
    }
}

/* Extra small screens */
@media screen and (max-width: 360px) {
    #stats {
        width: 94%;
        gap: 2px; /* Minimum gap */
    }

    .stat {
        padding: 3px;
    }

    .stat-value {
        font-size: 0.9em;
    }

    .stat-label {
        font-size: 0.65em;
    }

    .card {
        width: 130px;
        height: 220px;
        padding: 8px;
    }

    .stat-value {
        font-size: 1.2em;
    }

    .stat-label {
        font-size: 0.7em;
    }

    #game-messages {
        margin: 8px auto;
        width: calc(100% - 16px);
    }

    #stats {
        margin: 8px auto;
        width: calc(100% - 16px);
    }
}

/* disable hover effects on touch devices */
@media (hover: none) {
    .card:hover,
    .chaos-level-1 .card:hover,
    .chaos-level-2 .card:hover,
    .chaos-level-3 .card:hover,
    .chaos-level-max .card:hover {
        animation: none !important;
        transform: none !important;
    }

    /* Replace hover animations with touch animations */
    .card:active {
        animation: touchExcited 0.3s ease-in-out !important;
    }

    .card,
    .card:hover,
    .card:active {
        background: #444 !important;  /* Force default background */
        transform: none !important;   /* Prevent any transform */
    }

    /* Ensure divider line is always visible */
    .card .card-effects {
        border-top: 1px solid #555 !important;
    }

    /* Override any hover states that might get stuck */
    .card::after,
    .card:hover::after,
    .card:active::after {
        display: none !important;
    }
}

/* Update the existing card hover styles to be more specific */
@media (hover: hover) {
    .card:hover {
        animation: hoverExcited 1s ease-in-out infinite !important;
    }
}

@media (hover: none) and (pointer: coarse) {
    /* Force override ALL card animations on touch devices */
    .card,
    .card:hover,
    .card:active,
    .card.chaos-level-1,
    .card.chaos-level-2,
    .card.chaos-level-3,
    .card.chaos-level-max {
        animation: none !important;
        transform: none !important;
        transition: none !important;
        -webkit-tap-highlight-color: transparent !important;
        touch-action: manipulation !important;
    }

    /* Only animate when card is actually played */
    .card.played[data-selected="true"] {
        animation: none !important;
        transform: scale(0.8) translateY(-20px) !important;
        opacity: 0 !important;
        pointer-events: none !important;
    }
}

/* Ensure new cards don't inherit any hover states */
.card-container.clearing .card,
.card-container:not(.played) .card {
    background: #444 !important;
    transform: none !important;
    transition: none !important;
    border-top-color: #444 !important;
}

.wiggle-selected {
    animation: wiggle-selected 0.35s ease-in-out !important;
    transform-origin: center center;
}

/* Fix card dissolving animation */
.card.dissolving {
    pointer-events: none;
    z-index: 999;
    will-change: transform, opacity;
    transform-origin: center center;
    transition: none !important;
}

/* Ensure no other animations interfere with the dissolving animation */
.card.dissolving.chaos-level-1,
.card.dissolving.chaos-level-2,
.card.dissolving.chaos-level-3,
.card.dissolving.chaos-level-max {
    animation-delay: 0s !important;
    transition: none !important;
}

/* Override all animations for upgrade-selected cards to ensure clean pinning process */
.card.upgrade-selected {
    animation: none !important;
    transform-origin: center center;
    pointer-events: none;
    transition: none !important;
    will-change: transform, opacity;
}

/* Upgrade card pinning animation */
.upgrade-card {
    width: 130px;  /* Proportionally scaled from 200px */
    height: 180px; /* Proportionally scaled from 280px */
    padding: 8px;
    background: #444;
    border-radius: 8px;
    font-size: 0.85em; /* Reduced from 0.55em */
    display: flex;
    flex-direction: column;
    transition: all 0.3s ease-out;
    cursor: pointer;
    transform-origin: center center;
}

/* Add upgrade card cost display styling */
.upgrade-card .cost-display {
    font-size: 0.9em;
    margin-top: auto;
    color: #ffd700;
    text-align: right;
}

.upgrade-card .permanent-effects,
.upgrade-card .instant-effects {
    font-size: 1.1em;
    margin-top: 2px;
    display: flex;
    flex-direction: column;
    overflow-y: visible;
    height: auto;
    
}

.upgrade-card .effects-label {
    color: #c6d3b8;
    font-size: 0.85em;
    margin-bottom: 3px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    font-weight: bold;
}

.upgrade-card h4 {
    color: #f39c12;
    font-size: 1.1em;
    margin: 0 0 5px 0;
}

.upgrade-card .upgrade-effects {
    margin-top: auto;
    padding-top: 5px;
    border-top: 1px solid #555;
}

.upgrade-card .permanent-effect {
    margin: 3px 0;
    font-weight: bold;
    font-size: 1.1em;
    line-height: 1.3;
}

/* Color classes for permanent effects */
.upgrade-card .prestigeGain-color { 
    color: #f1c40f; 
    text-shadow: 0 0 2px rgba(241, 196, 15, 0.5);
}
.upgrade-card .chaosReduction-color { 
    color: #e74c3c; 
    text-shadow: 0 0 2px rgba(231, 76, 60, 0.5);
}
.upgrade-card .workerEfficiency-color { 
    color: #3498db; 
    text-shadow: 0 0 2px rgba(52, 152, 219, 0.5);
}

.upgrade-label {
    font-size: 0.65em; /* Reduced from 0.7em */
    margin-bottom: 2px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
    animation: rainbowText 3s linear infinite;
}

/* Override any interfering animations when card is being moved to upgrades */
.card[data-selected="true"] {
    z-index: 1000;
    position: fixed;
    pointer-events: none;
    transition: all 0.5s ease-out;
    will-change: transform;
}

/* Ensure the original card stays visible during transition */
.card[data-selected="true"]:not(.dissolving) {
    opacity: 1 !important;
}

/* Smoke particle styling */
.smoke-particle {
    position: fixed;
    width: 12px;
    height: 12px;
    background: rgba(255, 255, 255, 0.9);
    border-radius: 50%;
    pointer-events: none;
    z-index: 1000;
    will-change: transform, opacity;
    animation: smoke 1s ease-out forwards;
}

@keyframes smoke {
    0% {
        transform: translate(0, 0) scale(1.5);
        filter: blur(0);
    }
    30% {
        filter: blur(2px);
    }
    60% {
        opacity: 0.4;
        filter: blur(3px);
    }
    100% {
        transform: translate(var(--tx), var(--ty)) scale(3.5);
        opacity: 0;
        filter: blur(5px);
        background: rgba(200, 200, 200, 0);
    }
}

/* Add dissolving card styles - This class only contains shared properties */
.card.dissolving {
    pointer-events: none !important;
    z-index: 999 !important;
    will-change: transform, opacity !important;
    transform-origin: center center !important;
    transition: none !important;
    display: block !important;
    /* We don't include animation here - it's set directly via JS */
}

/* Spinning animation */
@keyframes cardSpin {
    0% {
        transform: translate(0, 0) scale(1) rotate(0deg);
        opacity: 1;
        filter: blur(0);
    }
    20% {
        transform: translate(0, -10px) scale(0.9) rotate(calc(var(--spin-dir, 1) * 180deg));
        opacity: 0.7;
        filter: blur(1px);
    }
    40% {
        transform: translate(0, -20px) scale(0.6) rotate(calc(var(--spin-dir, 1) * 360deg));
        opacity: 0.4;
        filter: blur(2px);
    }
    100% {
        transform: translate(0, -30px) scale(0.3) rotate(calc(var(--spin-dir, 1) * 540deg));
        opacity: 0;
        filter: blur(3px);
    }
}

/* Continuous spinning animation (multiple rotations) */
@keyframes cardContinuousSpin {
    0% {
        transform: translate(0, 0) scale(1) rotate(0deg);
        opacity: 1;
        filter: blur(0);
    }
    10% {
        transform: translate(0, -5px) scale(0.98) rotate(calc(var(--spin-dir, 1) * 90deg));
        opacity: 0.95;
    }
    20% {
        transform: translate(0, -10px) scale(0.95) rotate(calc(var(--spin-dir, 1) * 270deg));
        opacity: 0.9;
        filter: blur(0.5px);
    }
    30% {
        transform: translate(0, -15px) scale(0.9) rotate(calc(var(--spin-dir, 1) * 540deg));
        opacity: 0.85;
    }
    40% {
        transform: translate(0, -20px) scale(0.85) rotate(calc(var(--spin-dir, 1) * 900deg));
        opacity: 0.8;
        filter: blur(1px);
    }
    50% {
        transform: translate(0, -25px) scale(0.8) rotate(calc(var(--spin-dir, 1) * 1440deg));
        opacity: 0.7;
    }
    60% {
        transform: translate(0, -30px) scale(0.7) rotate(calc(var(--spin-dir, 1) * 2160deg));
        opacity: 0.6;
        filter: blur(1.5px);
    }
    70% {
        transform: translate(0, -35px) scale(0.5) rotate(calc(var(--spin-dir, 1) * 3060deg));
        opacity: 0.4;
        filter: blur(2px);
    }
    80% {
        transform: translate(0, -40px) scale(0.4) rotate(calc(var(--spin-dir, 1) * 4140deg));
        opacity: 0.3;
    }
    90% {
        transform: translate(0, -50px) scale(0.2) rotate(calc(var(--spin-dir, 1) * 5400deg));
        opacity: 0.2;
        filter: blur(2.5px);
    }
    100% {
        transform: translate(0, -60px) scale(0.1) rotate(calc(var(--spin-dir, 1) * 7200deg));
        opacity: 0;
        filter: blur(3px);
    }
}

/* Shrink animation */
@keyframes cardShrink {
    0% {
        transform: translate(0, 0) scale(1);
        opacity: 1;
        filter: brightness(1);
    }
    30% {
        transform: translate(0, -5px) scale(0.8);
        opacity: 0.8;
        filter: brightness(1.1);
    }
    60% {
        transform: translate(0, -10px) scale(0.4);
        opacity: 0.4;
        filter: brightness(1.2);
    }
    100% {
        transform: translate(0, -15px) scale(0);
        opacity: 0;
        filter: brightness(1.3);
    }
}

/* Fly away animation */
@keyframes cardFlyAway {
    0% {
        transform: translate(0, 0) scale(1) rotate(0deg);
        opacity: 1;
        filter: blur(0);
    }
    30% {
        transform: translate(calc(var(--fly-x) * 0.3), calc(var(--fly-y) * 0.3)) scale(0.9) rotate(calc(var(--fly-rot) * 0.3));
        opacity: 0.8;
        filter: blur(1px);
    }
    70% {
        transform: translate(calc(var(--fly-x) * 0.7), calc(var(--fly-y) * 0.7)) scale(0.6) rotate(calc(var(--fly-rot) * 0.7));
        opacity: 0.4;
        filter: blur(2px);
    }
    100% {
        transform: translate(var(--fly-x), var(--fly-y)) scale(0.3) rotate(var(--fly-rot));
        opacity: 0;
        filter: blur(3px);
    }
}

/* Explode animation */
@keyframes cardExplode {
    0% {
        transform: translate(0, 0) scale(1) rotate(0deg);
        opacity: 1;
        filter: brightness(1);
        clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    }
    15% {
        transform: translate(0, -5px) scale(1.05) rotate(0deg);
        opacity: 0.9;
        filter: brightness(1.2);
        clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    }
    30% {
        opacity: 0.8;
        filter: brightness(1.3);
        transform: translate(0, -10px) scale(1) rotate(0deg);
        clip-path: polygon(5% 5%, 95% 2%, 98% 95%, 2% 98%);
    }
    100% {
        transform: translate(0, -15px) scale(1.2) rotate(0deg);
        opacity: 0;
        filter: brightness(1.5);
        clip-path: polygon(50% 0%, 0% 30%, 20% 50%, 0% 80%, 50% 100%, 70% 50%);
    }
}

/* Dissolve/fade effect */
@keyframes cardDissolve {
    0% {
        transform: translate(0, 0) scale(1);
        opacity: 1;
        filter: blur(0);
    }
    40% {
        transform: translate(0, -10px) scale(0.9);
        opacity: 0.7;
        filter: blur(2px);
    }
    100% {
        transform: translate(0, -30px) scale(0.7);
        opacity: 0;
        filter: blur(8px);
    }
}

/* Water splash effect */
.water-splash {
    position: fixed;
    pointer-events: none;
    z-index: 1000;
}

.water-droplet {
    position: absolute;
    width: 6px;
    height: 6px;
    background: #00a0ff;
    border-radius: 50%;
    filter: blur(1px);
    animation: splash 0.8s ease-out forwards;
}

@keyframes splash {
    0% {
        transform: rotate(var(--angle)) translateX(0) scale(1);
        opacity: 0.8;
    }
    100% {
        transform: rotate(var(--angle)) translateX(50px) scale(0.1);
        opacity: 0;
    }
}

/* Exploding noodle effect */
.exploding-noodle {
    position: fixed;
    width: 20px;
    height: 4px;
    background: #ffe4b5;
    border-radius: 2px;
    pointer-events: none;
    z-index: 1000;
    will-change: transform, opacity;
    animation: noodleExplode 1s ease-out forwards;
}

@keyframes noodleExplode {
    0% {
        transform: translate(0, 0) rotate(0deg);
        opacity: 1;
    }
    100% {
        transform: translate(var(--tx), var(--ty)) rotate(var(--rotation));
        opacity: 0;
    }
}

/* Money symbol effect */
.money-symbol {
    position: fixed;
    font-size: 24px;
    color: #2ecc71;
    pointer-events: none;
    z-index: 1000;
    will-change: transform, opacity;
    animation: money 1.5s ease-out forwards;
    text-shadow: 0 0 5px rgba(46, 204, 113, 0.5);
}

@keyframes money {
    0% {
        transform: translate(0, 0) scale(1) rotate(0deg);
        opacity: 1;
    }
    50% {
        opacity: 1;
    }
    100% {
        transform: translate(var(--tx), var(--ty)) scale(0.2) rotate(360deg);
        opacity: 0;
    }
}

/* This is what controls where the pinned upgrades are contained  */
.upgrades-container {
    margin-top: -10px; /* Changed from 10px to -10px */
    padding: 10px;
    width: 100%;
    height: 250%;
}

.upgrades-grid {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
    height: 250%;
    justify-content: center;
}

.upgrade-card.selling {
    z-index: 1000;
    background: #4a4a4a;
    overflow: visible; /* Ensure popup can appear outside the card */
}

.upgrade-card.disappearing {
    transform: scale(0);
    opacity: 0;
    transition: transform 0.3s ease-out, opacity 0.3s ease-out;
}

/* Enhanced sell confirmation popup */
.sell-confirm.compact-confirm {
    position: absolute;
    width: 220px; /* Wider popup */
    height: auto;
    max-height: 180px; /* Taller popup */
    font-size: 14px; /* Larger text */
    background: rgba(20, 20, 20, 0.95);
    border: 2px solid #555; /* More visible border */
    border-radius: 8px;
    padding: 10px 12px;
    z-index: 1500;
    top: -90px; /* Position it much higher above the card */
    left: 50%;
    transform: translateX(-50%);
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.9), 0 0 8px rgba(255, 215, 0, 0.5);
    pointer-events: auto; /* Ensure it can receive clicks */
}

/* Animation for the popup appearing */
.sell-confirm.compact-confirm {
    animation: sellPopupAppear 0.25s ease-out forwards;
}

@keyframes sellPopupAppear {
    0% {
        opacity: 0;
        transform: translate(-50%, 10px) scale(0.8);
    }
    100% {
        opacity: 1;
        transform: translate(-50%, 0) scale(1);
    }
}

.sell-confirm {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    border-radius: 8px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    gap: 8px;
    z-index: 1500; /* Ensure it's on top */
}

.sell-text {
    color: #fff;
    font-size: 0.9em;
}

.sell-buttons {
    display: flex;
    gap: 8px;
}

.sell-buttons button {
    padding: 4px 8px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.8em;
}

.sell-yes {
    background: #e74c3c;
    color: white;
}

.sell-no {
    background: #7f8c8d;
    color: white;
}

.sell-yes:hover {
    background: #c0392b;
}

.sell-no:hover {
    background: #95a5a6;
}

/* Save/Load functionality styles */
.save-load-container {
    position: fixed;
    top: 10px;
    right: 10px;
    display: flex;
    gap: 10px;
    z-index: 1000;
}

.save-load-container button {
    padding: 8px 16px;
    font-size: 14px;
    background: rgba(0, 0, 0, 0.7);
    border: 1px solid #666;
    color: #fff;
    cursor: pointer;
    transition: all 0.2s ease;
}

.save-load-container button:hover {
    background: rgba(30, 30, 30, 0.9);
    border-color: #888;
    transform: translateY(-1px);
}

.save-load-container button:active {
    transform: translateY(1px);
}

/* Animation for save/load feedback */
@keyframes saveLoadFeedback {
    0% { transform: scale(1); }
    50% { transform: scale(1.1); }
    100% { transform: scale(1); }
}

/* Start screen button styles */
.button-container {
    display: flex;
    flex-direction: column;
    gap: 0.5px;  /* Increased from 2px for better spacing */
    align-items: center;
    margin-top: 20px;
}

#continue-game {
    margin-top: 2px;
    background-color: #27ae60; /* Different color from new game button */
}

#continue-game:hover {
    background-color: #2ecc71;
}

/* Preloader styles */
.preloader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: #1a1a1a;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 9999;
}

.loading-noodle {
    width: 60px;
    height: 60px;
    border: 4px solid #FFD700;
    border-radius: 50%;
    border-top-color: transparent;
    animation: noodle-spin 1s linear infinite;
    margin-bottom: 20px;
}

.loading-text {
    color: #FFD700;
    font-size: 1.2em;
    margin-bottom: 15px;
}

.loading-progress {
    width: 200px;
    height: 4px;
    background: #333;
    border-radius: 2px;
    overflow: hidden;
}

.progress-bar {
    width: 0%;
    height: 100%;
    background: #FFD700;
    transition: width 0.3s ease;
}

@keyframes noodle-spin {
    to { transform: rotate(360deg); }
}

/* Factory lights styling */
#factory-lights {
    margin: 15px auto;
    width: 760px;
    max-width: calc(100% - 40px);
    height: 20px;
    background: #1a1a1a; /* Match page background */
    border-radius: 5px;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 0 15px;
    position: relative;
    overflow: hidden;
    box-sizing: border-box;
}

.lights-container {
    display: flex;
    gap: 25px;
    width: 100%;
    max-width: 700px;
    margin: 0 auto;
    justify-content: space-between;
}

/* Base light bulb style - all dim by default */
.light-bulb {
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: #222;
    box-shadow: none;
    transition: all 0.5s ease;
    position: relative;
    opacity: 0.3; /* Very dim by default */
}

/* Normal state light */
.light-bulb.on {
    background: #ffd700;
    opacity: 1;
    box-shadow: 
        0 0 4px rgba(255, 215, 0, 0.95),
        0 0 8px rgba(255, 215, 0, 0.75);
}

/* Low resource warning state */
.light-bulb.warning {
    background: #ff8800;
    opacity: 0.7;
    box-shadow: 
        0 0 4px rgba(255, 136, 0, 0.8),
        0 0 8px rgba(255, 136, 0, 0.6);
    animation: warningFlicker 2s ease-in-out infinite;
}

/* Critical resource state */
.light-bulb.critical {
    background: #ff4400;
    opacity: 0.5;
    box-shadow: 
        0 0 4px rgba(255, 68, 0, 0.7),
        0 0 8px rgba(255, 68, 0, 0.5);
    animation: criticalFlicker 1s ease-in-out infinite;
}

/* Warning flicker animation */
@keyframes warningFlicker {
    0%, 100% { opacity: 0.7; }
    50% { opacity: 0.4; }
}

/* Critical flicker animation */
@keyframes criticalFlicker {
    0%, 100% { opacity: 0.5; }
    50% { opacity: 0.2; }
}

/* New resources display styles */
#resources-display {
    position: absolute;
    top: -25px;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: 20px;
    background: rgba(0, 0, 0, 0.6);
    -webkit-backdrop-filter: blur(5px);
    backdrop-filter: blur(5px);
    padding: 4px 12px;
    border-radius: 15px;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
    backdrop-filter: blur(5px);
    z-index: 10;
}

.resource {
    display: flex;
    align-items: center;
    gap: 6px;
    font-size: 0.9em;
}

.resource-icon {
    font-size: 0.9em;
    opacity: 0.8;
}

.resource-value {
    font-weight: bold;
    letter-spacing: 0.5px;
}

.money-color {
    color: #ffd000;
    text-shadow: 0 0 8px rgba(133, 187, 101, 0.4);
}

.noodles-color {
    color: #e5e74e;
    text-shadow: 0 0 8px rgba(255, 215, 0, 0.4);
}

.resources-row {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 15px;
    padding: 4px 0;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    width: 100%;
    background: transparent;
    border-top: 1px solid rgba(255, 255, 255, 0.1);
}

.resource-item {
    display: flex;
    align-items: center;
    gap: 4px;
    font-size: 0.85em;
    white-space: nowrap;
}

.resource-icon {
    opacity: 0.8;
    margin-right: 2px;
}

/* Noodle logo styles */
.noodle-icon {
    height: 60px;
    width: auto;
    vertical-align: middle;
    margin-left: 8px;
    margin-bottom: 0px;
    display: inline-block;
    object-fit: contain;
    image-rendering: -webkit-optimize-contrast;
    image-rendering: crisp-edges;
}

/* Ensure the jiggly animation works well with the image */
.jiggly.noodle-icon {
    transform-origin: center center;
    animation: gentle-float 3s ease-in-out infinite;
}

@keyframes gentle-float {
    0%, 100% { transform: translateY(0px); }
    50% { transform: translateY(-3px); }
}

/* Help Button & Overlay Styles */
.help-button {
    position: fixed;
    top: 10px;
    right: 15px;
    width: 32px;
    height: 32px;
    border-radius: 50%;
    background: rgba(30, 30, 40, 0.85);
    border: 2px solid #ffd700;
    color: #ffd700;
    font-size: 18px;
    font-weight: bold;
    cursor: pointer;
    z-index: 1000;
    display: flex;
    align-items: center;
    justify-content: center;
    box-shadow: 0 0 10px rgba(255, 215, 0, 0.4);
    transition: all 0.2s ease;
    padding: 0;
    /* Ensure the button doesn't move when game state changes */
    transform: translateY(0);
    margin: 0;
    transform: none !important;
}

.help-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(0, 0, 0, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;    z-index: 1000;
    animation: fadeIn 0.3s ease;
}

.help-container {
    width: 85%;
    max-width: 500px;
    max-height: 80vh;
    background-color: rgb(20, 20, 25);
    border: 2px solid #ffd700;
    border-radius: 8px;
    box-shadow: 0 0 20px rgba(255, 215, 0, 0.5);
    padding: 15px 20px;
    overflow-y: auto;    animation: slideUp 0.4s ease;
    color: #e0e0e0;
}

.help-container h2 {
    text-align: center;
    margin-bottom: 15px;
    color: #ffd700;
    font-size: 22px;
    text-shadow: 0 0 5px rgba(255, 215, 0, 0.5);
}

.help-section {
    margin-bottom: 15px;
    padding-bottom: 10px;
    border-bottom: 1px solid rgba(255, 215, 0, 0.3);
}

.help-section h3 {
    margin-bottom: 8px;
    color: #ffd700;
    font-size: 18px;
}

.help-section p {
    margin-bottom: 8px;
    line-height: 1.4;
}

.help-section ul {
    margin: 0;
    padding-left: 20px;
}

.help-section li {
    margin-bottom: 6px;
    line-height: 1.3;
}

.help-tip {
    padding: 10px;
    background-color: rgba(75, 75, 104, 0.6);
    border-left: 3px solid #ffd700;
    margin-top: 15px;
    margin-bottom: 15px;
    font-size: 0.9em;
}

.help-buttons {
    text-align: center;
    padding-top: 10px;
}

.help-buttons button {
    padding: 8px 16px;
    min-width: 100px;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideUp {
    from {
        opacity: 0;
        transform: translateY(30px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

/* Style color classes in help text */
.help-container .prestige-color {
    color: #9b59b6;  /* Purple for prestige */
}

.help-container .chaos-color {
    color: #e74c3c;  /* Red for chaos */
}

.help-container .ingredients-color {
    color: #2ecc71;  /* Green for ingredients */
}

.help-container .energy-color {
    color: #3498db;  /* Blue for workers/energy */
}

.help-container .positive {
    color: #2ecc71;
    font-weight: bold;
}

.help-container .negative {
    color: #e74c3c;
    font-weight: bold;
}

/* Emergency Pasta Button styles */
.emergency-pasta-button {
    position: relative;
    display: inline-flex;
    width: 15px;
    height: 15px;
    margin-left: 8px;
    background: #e74c3c;
    border: 2px solid #c0392b;
    border-radius: 50%;
    box-shadow: 0 0 6px rgba(0, 0, 0, 0.4), inset 0 0 6px rgba(0, 0, 0, 0.2);
    cursor: pointer;
    align-items: center;
    justify-content: center;
    vertical-align: middle;
    z-index: 10;
    transition: all 0.2s ease;
    animation: pulse-red 5s infinite;
}

.emergency-pasta-button:hover {
    transform: scale(1.1);
    box-shadow: 0 0 10px rgba(231, 76, 60, 0.7), inset 0 0 10px rgba(0, 0, 0, 0.3);
}

.emergency-pasta-button:active {
    transform: scale(0.95);
}

.emergency-pasta-button span {
    font-size: 14px;
    font-weight: bold;
    color: #fff;
    line-height: 1;
}

/* Make the noodles item display flex to align button properly */
.resource-item {
    display: flex;
    align-items: center;
}

/* Rest of the emergency modal CSS remains the same */
.emergency-modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    max-width: 500px;
    background: rgba(20, 20, 20, 0.95);
    border: 2px solid #e74c3c;
    border-radius: 10px;
    box-shadow: 0 0 25px rgba(231, 76, 60, 0.5);
    padding: 20px;
    z-index: 1001;
    display: none;
    flex-direction: column;
    gap: 15px;
}

.emergency-modal.active {
    display: flex;
    animation: modalAppear 0.3s forwards;
}

.emergency-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.emergency-header h2 {
    color: #e74c3c;
    font-size: 1.5em;
    margin: 0;
    text-shadow: 0 0 5px rgba(231, 76, 60, 0.3);
}

.emergency-close {
    background: none;
    border: none;
    color: #bbb;
    font-size: 1.5em;
    cursor: pointer;
}

.emergency-options {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.emergency-option {
    padding: 15px;
    background: rgba(50, 50, 50, 0.5);
    border: 1px solid #555;
    border-radius: 8px;
    cursor: pointer;
    transition: all 0.2s;
}

.emergency-option:hover {
    background: rgba(70, 70, 70, 0.7);
    transform: translateY(-2px);
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
}

.emergency-option:active {
    transform: translateY(0);
}

.option-header {
    display: flex;
    justify-content: space-between;
    margin-bottom: 5px;
}

.option-title {
    font-weight: bold;
    color: #f39c12;
}

.option-price {
    color: #ffd700 !important; /* Changed to gold/yellow with !important to ensure consistency */
    font-weight: bold;
    text-shadow: 0 0 4px rgba(255, 215, 0, 0.3); /* Add subtle glow effect */
}

.option-desc {
    font-size: 0.9em;
    color: #bbb;
    line-height: 1.4;
}

@keyframes modalAppear {
    0% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(0.8);
    }
    100% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(1);
    }
}

/* Add consistent styling for money gain */
.money-gain {
    color: #ffd700 !important; /* Changed to gold/yellow with !important to ensure consistency */
    font-weight: bold;
    text-shadow: 0 0 4px rgba(255, 215, 0, 0.3); /* Add subtle glow effect */
}

/* Add these new card animations for more variety */
@keyframes cardExplode {
    0% { 
        transform: scale(1);
        opacity: 1;
        clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    }
    15% { 
        transform: scale(1.1);
        opacity: 1;
        clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%);
    }
    30% { 
        transform: scale(1.15) rotate(3deg);
        opacity: 0.9;
    }
    100% { 
        transform: scale(1.3);
        opacity: 0;
        clip-path: polygon(
            20% 0%, 0% 20%, 40% 50%, 0% 80%, 20% 100%, 
            50% 70%, 80% 100%, 100% 80%, 60% 50%, 
            100% 20%, 80% 0%, 50% 30%
        );
    }
}

@keyframes cardShrink {
    0% { 
        transform: scale(1) rotate(0deg);
        opacity: 1;
    }
    20% { 
        transform: scale(0.9) rotate(3deg);
        opacity: 0.9;
    }
    45% { 
        transform: scale(0.7) rotate(-3deg);
        opacity: 0.7;
    }
    70% { 
        transform: scale(0.3) rotate(5deg);
        opacity: 0.3;
    }
    100% { 
        transform: scale(0) rotate(0deg);
        opacity: 0;
    }
}

@keyframes cardFlyAway {
    0% { 
        transform: scale(1) translate(0, 0) rotate(0deg);
        opacity: 1;
    }
    20% { 
        transform: scale(0.9) translate(0, -20px) rotate(5deg);
        opacity: 0.9;
    }
    100% { 
        transform: scale(0.6) translate(var(--fly-x, 200px), var(--fly-y, -200px)) rotate(var(--fly-rot, 45deg));
        opacity: 0;
    }
}

@keyframes cardDissolve {
    0% { 
        transform: scale(1);
        opacity: 1;
        filter: blur(0);
    }
    20% { 
        transform: scale(1.05);
        opacity: 0.8;
        filter: blur(3px);
    }
    60% {
        transform: scale(1.15);
        opacity: 0.3;
        filter: blur(8px);
    }
    100% { 
        transform: scale(1.2);
        opacity: 0;
        filter: blur(20px);
    }
}

@keyframes cardSpin {
    0% {
        transform: scale(1) rotate(0deg);
        opacity: 1;
    }
    25% {
        transform: scale(0.9) rotate(calc(var(--spin-dir, 1) * 90deg));
        opacity: 0.8;
    }
    50% {
        transform: scale(0.7) rotate(calc(var(--spin-dir, 1) * 180deg));
        opacity: 0.6;
    }
    75% {
        transform: scale(0.5) rotate(calc(var(--spin-dir, 1) * 270deg));
        opacity: 0.3;
    }
    100% {
        transform: scale(0.3) rotate(calc(var(--spin-dir, 1) * 360deg));
        opacity: 0;
    }
}